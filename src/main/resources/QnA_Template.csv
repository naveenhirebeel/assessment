Section,,Id(Unique),Question,type,Weightage for Question,major_version,minor_version,Answer 1,Score 1,Answer 2,Score 2,Answer 3,Score 3,Answer 4,Score 4,Answer 5,Score 5,"Answer ""NA""",Score ,,Category,Sub Category
Continuous Exploration,,1,Please rate your team's ability to translate business ideas into hypothesis statements.,dropdown,1,1,0,Ideas are vague or not defined. (updated),1,Ideas are defined (e.g.$ as epics) but do not include hypothesis statements.,2,Some ideas are expressed as hypothesis statements with measurable outcomes.,3,Most ideas are expressed as hypothesis statements with measurable outcomes and include an MVPs.,4,All ideas are expressed as hypothesis statements with measurable outcomes and include an MVPs.,5,NA- This is not applicable for my project scope.,NA,,Continuous Exploration,Hypothesize
Continuous Exploration,,2,Please rate your team's ability to collaborate with business and IT teams to define features  in order to support of the epic/hypothesis. (updated),dropdown,1,1,0,Product Management roles and responsibilities are not defined or followed.,1,Product Management collaboration with customer or development team only when required.,2,Product Management collaborates with business-side or development-side experts in silos$ but not together when defining requirements.,3,Product Management regularly collaborates with business$ solution architects and development team.,4,Product Management regularly collaborates with business$ solution architects$ development team and operations team.,5,NA- This is not applicable for my project scope.,NA,,Continuous Exploration,Collaborate
Continuous Exploration,,3,Please rate your team's effectiveness at architecting products for scalability.,dropdown,1,0,0,Architecture is monolithic and doesn't support scaling.,1,Architecture is predominantly monolithic but some components are distributed.,2,Architecture supports distributed hosting but hosted centrally at the moment.,3,Architecture supports distributed hosting and its distributed.,4,Architecture supports distributed hosting and its distributed. Designed around value delivery stream and supports release on demand.,5,NA- This is not applicable for my project scope.,NA,,Continuous Exploration,Architect
Continuous Exploration,,4,Please rate your team's effectiveness at architecting products with respect to dependencies/interfaces and continuous delivery.,dropdown,1,0,0,Architecture is tightly coupled with upstream and downstream systems. It is difficult to change and involves managing complex dependencies across many components and systems. ,1,Architecture is moderately coupled and dependencies are manageable.,2,Architectures is most decoupled but individual components/systems alone support release on demand.,3,Architectures is most decoupled and most components/systems support release on demand.,4,Architectures is most decoupled$ upstream and downstream system support release on demand.,5,NA- This is not applicable for my project scope.,NA,,Continuous Exploration,Architect
Continuous Exploration,,5,Please rate your team's ability on backlog grooming as results of Continuous Exploration.,dropdown,1,0,0,The program backlog does not exist or is not shared. ,1,The program backlog exists but the features are incomplete.,2,The program backlog contains fully defined features but are not prioritized using (WSJF) Weighted Shortest Job First.,3,Features in the program backlog are complete$ prioritized using WSJF and but is not aligned to the delivery capacity of the ART (Agile Release Trains).,4,Features in the program backlog are complete$ prioritized using WSJF and but is fully aligned to the delivery capacity of the ART (Agile Release Trains).,5,NA- This is not applicable for my project scope.,NA,,Continuous Exploration,Synthesize
Continuous Integration,,6,Please rate your team's ability to define stories.,dropdown,1,1,0,The team backlog does not exist or is not used to manage daily work.,1,Stories are either incomplete or vague.,2,Stories are complete$ but not prioritized.,3,Stories are complete$ also prioritized using some techniques.,3.5,Stories are completed$ rightly prioritized and assigned with clear timelines.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Develop
Continuous Integration,,7,Please rate your team's ability in following best software development methodologies.,dropdown,2,0,1,We are aware of Agile but we do not follow.,1,We are aware of Agile and we partially follow the same.,2,We do follow Agile but not in a DTE way.,3,We collaborate with DTE and follow some of their principles/practices.,4,We completely follow DTE methodologies.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Develop
Continuous Integration,,8,Please rate your team's ability to maintain code quality & standards.,dropdown,1,0,0,No static code analysis in place to determine the health of code.,1,Static code analysis is done but its not automated.,2,Static code analysis executed and is automated with proper coverage report. Code coverage check is automated.,3,Automated Static code analysis in place and coverage criteria is set 80%.Peer reviews are always conducted.,4,Automated static code analysis in place$ coverage criteria is set to 80%$ integrated to the CI pipeline$ build is triggered only if the coverage is met.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Develop
Continuous Integration,,9,Please rate your team's ability to mitigate security vulnerabilities from dynamic analysis on an application.,dropdown,1,0,0,New (non-legacy) vulnerabilities are release to production.,1,Legacy vulnerabilities are released to production but burnt down by 10% a month.,2,No vulnerabilities are released to production.,3,No vulnerabilities are found in nightly analysis.,4,No vulnerabilities are found in incremental desktop analysis.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Develop
Continuous Integration,,10,Please rate your team's effectiveness in source code management.,dropdown,1,0,0,We don't use any source code repository.,1,Multiple repositories to manage source code$ config files$ scripts and other supporting artifacts. ,2,One common repository for source code$ config files$ scripts and other supporting artefacts. ,3,Common repository but we do not follow any version controlled.,4,Common repository with version control and integrated with build pipeline.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Develop
Continuous Integration,,11,Please rate your team's effectiveness on branching strategy for uninterrupted commits.,dropdown,1,0,0,Branching Strategy not defined$ branches are managed on demand basis.,1,Branching Strategy defined$ we follow trunk based commits and do not create any additional branches.,2,Branching Strategy defined$ we follow trunk based commits with feature development branches.,3,Branching Strategy defined$ we follow trunk based commits with feature/task branches. Well defined release branches to fix any post release issues.,4,Branching Strategy defined$ implemented hooks & triggers for the branches to govern commits.  ,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Build
Continuous Integration,,12,Please rate your team's effectiveness on merging strategy for uninterrupted integration.,dropdown,1,0,0,Merging Strategy not defined$ merges are managed manually on demand basis.,1,Merging Strategy defined but there is manual code review and manual merge.,2,Merging Strategy defined$ manual merge with automated code review.,3,Merging Strategy defined$ auto merge with code review and quality gates.,4,Strategy defined and we follow task based branching with task toggles including all above.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Build
Continuous Integration,,13,Please rate your team's effectiveness at continuously compiling the source code and linking the dependencies.,dropdown,1,0,0, Builds are manual and run fewer than once per iteration.,1,Builds are partially automated and run once per iteration.,2,Builds are automated and run more than once per iteration.,3,Builds are automated and run every day.,4,Builds are automated and run as and when a commit is made or are scheduled to run at any desired time.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Build
Continuous Integration,,14,Please rate your teams effectiveness at performing unit tests for their respective change sets/code commits.,dropdown,1,0,0,No unit test cases occurring with/after the build.,1,Unit tests are executed after the build completes and is manual.,2,Unit tests are executed automatically after the build and is integrated with the pipeline.,3,Unit tests are executed automatically after the build$ integrated with the pipeline and publishes reports for decision making.,4, Unit tests are executed automatically after the build$ integrated with the pipeline$ publishes reports for decision making and creates a defect item in ALM if build fails.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Software Testing
Continuous Integration,,15,Please rate your team's effectiveness on environment provisioning and desired state configuration.,dropdown,1,0,0,Environments are provisioned via specific business process and are manual.,1,Environments are provisioned via specific business process and are automated. But desired state changes are manual.,2,Environments are provisioned via self service and are automated. Desired state changes are automated.,3, Environments and desired state changes are managed  via Infrastructure as a Code. ,4,Availability of business process & self service & Infrastructure as a Code for environment provisioning.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Infra Management
Continuous Integration,,16,Please rate your teams effectiveness at performing regression/functional tests for change sets.,dropdown,1,0,0,No automated test exists and testing is manual.,1,Some test automation  exists but is still mostly manual testing and is executed manually.,2,Test Automation exists and reports are published automatically.,3,Test Automation exists that publishes reports automatically and is integrated into a CI/CD pipeline.,4,Majority of testing is automated$ integrated with CI/CD pipeline$ further execution is triggered upon a successful test results.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Software Testing
Continuous Integration,,17,Please rate your team's ability to stage features in full production-like (non-test) environments for final validation prior to production deployment.,dropdown,1,0,0,No staging environment exists or we use a test environment for staging.,1,Features are deployed manually to a staging environment once every PI.,2,Features are deployed manually to a staging environment once per month.,3,Features and Infrastructure are deployed manually to a staging environment once per iteration.,4,Stories$ Features and Infrastructure are deployed automatically to a staging environment multiple times per iteration.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Infra Management
Continuous Integration,,18,Please rate your teams effectiveness at performing integration tests for change sets.,dropdown,1,0,0,No automated test exists and testing is manual.,1,Some test automation  exists but is still mostly manual testing and is executed manually.,2,Test Automation exists and reports are published automatically.,3,Test Automation exists that publishes reports automatically and is integrated into a CI/CD pipeline.,4,Majority of testing is automated$ integrated with CI/CD pipeline$ further execution is triggered upon a successful test results.,5,NA- This is not applicable for my project scope.,NA,,Continuous Integration,Software Testing
Continuous Deployment,,19,Please rate your team's ability to accurately rollback during failed deployment.,dropdown,1,0,0,No rollback procedure exist$ we often correct issues directly in production.,1,Rollback procedure exist and is manual. ,2, Rollback procedure exist and is manual. fixes are tested in stage before putting it on production.,3,Rollback procedure exist and is partially automated$ fixes are tested in stage$ fixes are promoted via blue/green deployment. ,4,Automated rolled back on failed deployments and fixed forward through the entire pipeline.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Deployment Management
Continuous Deployment,,20,Please rate your team's effectiveness at proactively detecting major incidents or critical issues.,dropdown,1,0,0,Customers/End Users find the issues and escalate.,1,Help desk gets notified of issues that affect users.,2,Monitoring team captures alert$ route the ticket to product teams about critical alerts.,3,Enhanced automated health checks on a periodic frequency & application health monitors for live monitoring.,4,We have enhanced monitoring or predictive monitoring to predict alerts before it turns into incidents.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Respond
Continuous Deployment,,21,Please rate your team's ability to continuously deploy features to production as well as the ability to control their visibility using feature toggles and/or other means.,dropdown,1,0,0,Features are deployed to production every 3+ months or more$ deployments are manual.,1, Features are deployed to production at every PI$ deployments are mostly manual.,2,Features are deployed to production every iteration$ deployments are mostly automated. ,3, Features are deployed to production every iteration and fully automated through the pipeline$ some features can be deployed without being released.,4,Features are deployed continuously throughout each iteration$ release is completely decoupled from deployment$ dark releases are possible.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Deployment Management
Continuous Deployment,,22,Please rate your teams effectiveness at performing End-End Functionality tests for their respective change sets/code commits.,dropdown,1,0,0,No automated test exists and testing is manual.,1,Some test automation exists but is still mostly manual testing and is executed manually.,2,Test Automation exists and reports are published automatically.,3,Test Automation exists that publishes reports automatically and is integrated into a CI/CD pipeline.,4,Majority of testing is automated$ integrated with CI/CD pipeline$ further execution is triggered upon a successful test results.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Software Testing
Continuous Deployment,,23,Please rate your team's ability to define and execute specialized testing like performance and scalability.,dropdown,1,0,0,We do not evaluate the need for specialized testing,1,We do evaluate the need for specialized testing but are unaware of next steps or partially manage our self,2,Dev team works closely with PaS team to create test plans and execution strategy,3,PaS performs the tests manually and produces the test results & recommendation,4,PaS tests are integrated as part of the continuous delivery pipeline and triggered on demand. ,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Specialized testing
Continuous Deployment,,24,Please rate your team's ability to validate deployment success or failure.,dropdown,1,0,0,Deployments are not validated in production before and after being released to end users.,1,Deployments are validated via UAT$ we address deployment issues within warranty period. If  bugs found$ we often fix bugs directly in production.,2,Deployments are validated via UAT$ we address deployment issues within warranty period. If  bugs found$ we do not fix bugs directly in production.,3,Deployments are validated using smoke tests and UAT prior to release.,4,Automated tests run and reported on an ongoing basis$ failed deployments are monitored instantly & fixed. ,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Verify
Continuous Deployment,,25,Please rate your team's effectiveness at monitoring the full solution stack (front end$ middle tier$ back end$ infrastructure$ etc.),dropdown,1,0,1,Infrastructure monitoring alone is in place. No application or feature level monitoring exists.,1,Infrastructure and application monitoring is in place. But no feature level monitoring exists.,2,Infrastructure$ application and features level monitoring is in place. But using multiple tools$ requires manual data collection and analysis.,3,Full-stack monitoring is in place$ data is presented through system-specific dashboards.,4,Full-stack monitoring is in place$ A platform that provides one-stop access to full-stack insights. Data is used to predict issues$ root cause analysis$ incident triages or measure business value.,5,NA- This is not applicable for my project scope.,NA,,Release on Demand,Measure
Continuous Deployment,,26,Please rate your team's effectiveness at proactively triaging major incidents and resolving it.,dropdown,1,0,0,Operations performs initial investigations via standard operating procedures during major incidents.,1,Operations owns production issues$ involve development & required teams at later time or requires escalation.,2, Development and Operations collectively own the incident resolution process$ recovering from major incidents is reactive but a team effort.,3,Collective ownership but operations performs fixes that require no code change and development team performs only code changes.,4,Developers are responsible for supporting their own code.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Respond
Continuous Deployment,,27,Please rate your teams maturity of automated security checks in your deployment pipeline.,dropdown,1,0,0,No security checks exist in your continuous deployment pipeline.,1,Static and/or Dynamic checks that report an issue to an ALM system.,2,Static and/or Dynamic checks that stop your pipeline if New (non-legacy) vulnerabilities are found.,3,Static and/or Dynamic checks that stop your pipeline if a certain threshold density of new (non-legacy)vulnerabilities are found.,4,Your teams deployment pipeline contains self healing tactics if certain vulnerabilities are found.,5,NA- This is not applicable for my project scope.,NA,,Continuous Deployment,Verify
Release on Demand,,28,Please rate your team's effectiveness at maintaining stable solutions that avoid unplanned down time and security breaches.,dropdown,1,0,0,We experience unplanned outages and/or security breaches with long recovery times affecting service level agreements.,1,We experience occasional unplanned outages$ we triage & recover within our service level agreements.,2,We have very few unplanned outages$ we have effective measures for availability$ security$ and disaster recovery.,3, We have no unplanned outages$ we plan and rehearse failure and recovery.,4, We maximize resiliency by deliberately injecting faults into our production environment and rehearsing recovery procedures.,5,NA- This is not applicable for my project scope.,NA,,Release on Demand,Stabilize
Release on Demand,,29,"Please rate your team's ability to make strategic$ ""pivot-or-persevere"" decision.",dropdown,1,0,0, Features are never evaluated post-release.,1, Features are sometimes evaluated using subjective information and/or unilateral opinions.,2,Features are evaluated using objective measures but actions are heavily influenced by individuals.,3,Features are objectively evaluated$ pivot or persevere decisions are made without mercy or guilt or via individual decisions.,4,Continuous Learning - Pivoting$ preserving and experimenting are ingrained in the DNA of the product team.,5,NA- This is not applicable for my project scope.,NA,,Release on Demand,Learn
Release on Demand,,30,Please rate your team's ability to release features to users on demand using feature toggles$ blue/green environments$ canary releases$ etc.,dropdown,1,0,0,Releases are tightly coupled to deployments.,1,Releases are tightly coupled to deployments but supports blue/green deployment.,2,Release and deployment are decoupled$ but both can occur continuously or on demand as per business needs.,3,Release and deployment are decoupled$ deployed features are released to the segments of end user population$ supports feature toggles.,4,Release and deployment are decoupled$ deployed features are released to the segments of end user population$ supports dark launches.,5,NA- This is not applicable for my project scope.,NA,,Release on Demand,Release
Release on Demand,,32,Please rate NEW question,dropdown,1,0,0,We don't define the value of features.,1,We defined what value is but don't know how to measure it.,2,We capture qualitative feedback from the business about the value of our features. ,3,We capture qualitative and quantitative feedback from the business and our monitoring systems about the value of our features.,4,We aggregate the quantitative and qualitative feedback to objectively validate the original hypothesis and inform pivot-or-persevere decisions.,5,NA- This is not applicable for my project scope.,NA,,Release on Demand,Measure
